<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE queryservice PUBLIC "-//ANYFRAME//DTD QUERYSERVICE//EN" "http://www.anyframejava.org/dtd/anyframe-core-query-mapping-3.2.dtd">
<queryservice>
	<queries>
		<query id="insertRoles" isDynamic="true" mappingStyle="camel">
			<statement>
			<![CDATA[
				INSERT INTO ROLES ( 			
					ROLE_ID, 
					ROLE_NAME, 
					DESCRIPTION, 
					CREATE_DATE, 
					MODIFY_DATE )
				VALUES (:roleid, 
						:rolename, 
						:desc, 
						:createdate, 
						:modifydate)
			]]>
			</statement>
			<param name="roleid" type="VARCHAR"/>
			<param name="rolename" type="VARCHAR"/>
			<param name="desc" type="VARCHAR"/>
			<param name="createdate" type="VARCHAR"/>
			<param name="modifydate" type="VARCHAR"/>
		</query>
		<query id="insertSecuredResRoles" isDynamic="true" mappingStyle="camel">
			<statement>
			<![CDATA[
				INSERT INTO SECURED_RESOURCES_ROLES ( 			
					RESOURCE_ID, 
					ROLE_ID, 
					CREATE_DATE, 
					MODIFY_DATE) 
				VALUES (:resourceid, 
						:roleid, 
						:createdate, 
						:modifydate)
			]]>
			</statement>
			<param name="resourceid" type="VARCHAR"/>
			<param name="roleid" type="VARCHAR"/>
			<param name="createdate" type="VARCHAR"/>
			<param name="modifydate" type="VARCHAR"/>
		</query>
		<query id="removeRoles" isDynamic="true" mappingStyle="camel">
			<statement>
			<![CDATA[
				DELETE FROM  ROLES
				WHERE ROLE_ID = :jobname
			]]>
			</statement>
			<param name="jobname" type="VARCHAR"/>
		</query>
		<query id="removeSecuredResRoles" mappingStyle="camel">
			<statement>
			<![CDATA[
				DELETE FROM SECURED_RESOURCES_ROLES
				WHERE ROLE_ID = :jobname
			]]>
			</statement>
			<param name="jobname" type="VARCHAR"/>
		</query>
		<query id="removeAuthority" mappingStyle="camel">
			<statement>
			<![CDATA[
				DELETE FROM AUTHORITIES
				WHERE ROLE_ID = :jobname
			]]>
			</statement>
			<param name="jobname" type="VARCHAR"/>
		</query>
		<query id="findUserRole" isDynamic="true" mappingStyle="camel">
			<statement>
			<![CDATA[
				SELECT g.group_name 
				FROM GROUPS g 
				WHERE g.group_id = (SELECT gu.group_id 
									FROM GROUPS_USERS gu 
									WHERE gu.user_id=:vo.userId)
			]]>
			</statement>
		</query>
	</queries>
</queryservice>
