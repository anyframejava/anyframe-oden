<project name="_Oden Full" default="build.all.dbg" basedir=".">
	<property name="version" value="2.4.0"/>
	<property name="manual.dir" location="../../../manual/manual/target/oden"/>
	<property name="oden.ant.dir" location="../anyframe.oden.ant/jar"/>
	<property name="pksubname" value="Anyframe-Oden-${version}"/>
	
	<target name="build.all">
		<condition property="todo" else="all-local">
			<isset property="todo"/>
		</condition>
		<ant antfile="../anyframe-oden-bundle/build.xml" target="${todo}" inheritall="false" />
			
		<ant antfile="../anyframe-oden-bundle-gate/build.xml" target="${todo}" inheritall="false" />

		<ant antfile="../anyframe-oden-bundle-common/build.xml" target="${todo}" inheritall="false" />

		<ant antfile="../anyframe-oden-bundle-core/build.xml" target="${todo}" inheritall="false" />

		<ant antfile="../anyframe-oden-bundle-hessiancli/build.xml" target="${todo}" inheritall="false" />
		
		<ant antfile="../anyframe-oden-bundle-hessiansvr/build.xml" target="${todo}" inheritall="false" />
					
		<!-- ant antfile="../anyframe.oden.bundle.ent.misc/build.xml" target="${todo}" inheritall="false" / -->

		<!-- ant antfile="../anyframe.oden.bundle.ent.repository/build.xml" target="${todo}" inheritall="false" / -->

		<!-- ant antfile="../anyframe.oden.bundle.ent.snapshot/build.xml" target="${todo}" inheritall="false" / -->

		<ant antfile="../anyframe-oden-bundle-http/build.xml" target="${todo}" inheritall="false" />
		
		<ant antfile="../anyframe-oden-bundle-auth/build.xml" target="${todo}" inheritall="false" />
		
		<!-- ant antfile="../anyframe.oden.bundle.sh/build.xml" target="${todo}" inheritall="false" / -->
		
		<ant antfile="../anyframe-oden-bundle-job/build.xml" target="${todo}" inheritall="false" />
		
		<ant antfile="../anyframe-oden-bundle-external/build.xml" target="${todo}" inheritall="false" />
	</target>
	
	<target name="build.all.dbg">
		<property name="todo" value="all.dbg" />
		<antcall target="build.all" />
	</target>
	
	<target name="_pack.agent">
			<mkdir dir="${artifactsDir}/bin"/>
			<mkdir dir="${artifactsDir}/bundle"/>
			
			<copy todir="${artifactsDir}/bin">
				<fileset dir="dist" includes="oden-*.jar"/>
			</copy>
			<copy todir="${artifactsDir}/bundle">
				<fileset dir="${basedir}/bundle" 
					includes=
						"anyframe-oden-bundle-hessiansvr-*.jar,
						anyframe-oden-bundle-common-*.jar,
						apache.felix.configadmin-*.jar,
						apache.felix.eventadmin-*.jar,
						apache.felix.http.jetty-*.jar,
						apache.felix.log-*.jar,
						apache.felix.scr-*.jar,
						hessian-*.jar,
						felix*.jar"/>
			</copy>
			<copy todir="${artifactsDir}/bin">
				<fileset dir="pkrsc" includes="startup-agent.sh,startup-agent.cmd"/>
			</copy>
		</target>
	<!--
	<target name="pack.agent" depends="_pack.agent">
		<zip destfile="${artifactsDir}/Anyframe-Oden-Agent-${version}.zip"
			basedir="${artifactsDir}" excludes="*.zip,*.tar,*.tar.gz,**/*.svn"/>
	</target>
	
	<target name="pack.agent.gzip" depends="_pack.agent">
		<tar destfile="${artifactsDir}/Anyframe-Oden-Agent-${version}.tar" basedir="${artifactsDir}" excludes="*.zip,*.tar,*.tar.gz,**/*.svn"/>
		<gzip destfile="${artifactsDir}/Anyframe-Oden-Agent-${version}.tar.gz" src="${artifactsDir}/Anyframe-Oden-Agent-${version}.tar"/>
		<delete file="${artifactsDir}/Anyframe-Oden-Agent-${version}.tar"/>
	</target>
	-->
	<target name="_pack.server">
		<mkdir dir="${artifactsDir}/bin"/>
		<mkdir dir="${artifactsDir}/bundle"/>
		<mkdir dir="${artifactsDir}/conf"/>
		<mkdir dir="${artifactsDir}/licenses"/>
		
		<copy todir="${artifactsDir}/bin">
			<fileset dir="dist" includes="oden-*.jar"/>
		</copy>
		<copy todir="${artifactsDir}/bundle">
			<fileset dir="${basedir}/bundle" 
				includes="anyframe-oden-bundle-gate-*.jar,
					anyframe-oden-bundle-common-*.jar,
					anyframe-oden-bundle-core-*.jar,
					anyframe-oden-bundle-hessiancli-*.jar,
					anyframe-oden-bundle-hessiansvr-*.jar,
					anyframe-oden-bundle-http-*.jar,
					anyframe-oden-bundle-auth-*.jar,
					anyframe-oden-bundle-job-*.jar,
					anyframe-oden-bundle-external-*.jar,
					felix.jar,
					org.apache.felix.configadmin-*.jar,
					org.apache.felix.eventadmin-*.jar,
					org.apache.felix.http.jetty-*.jar,
					org.apache.felix.log-*.jar,
					org.apache.felix.prefs-*.jar,
					org.apache.felix.scr-*.jar,
					org.apache.felix.shell.remote-*.jar,
					org.json_*.jar,
					hessian-*.jar,
					berkelydb-*.jar,
					icu4j-*.jar,
					org.apache.servicemix.bundles.jasypt-*.jar,
					commons-logging-*.jar"/>
		</copy>
		<copy todir="${artifactsDir}/conf">
			<fileset dir="pkrsc" includes="oden.ini,agent.ini,accounts.txt"/>
		</copy>
		<copy todir="${artifactsDir}/bin">
			<fileset dir="pkrsc" includes="startup.cmd,acc.cmd,runc.cmd,startup.sh,acc.sh,runc.sh,startup-agent.sh,startup-agent.cmd"/>
		</copy>
		<copy todir="${artifactsDir}/licenses">
			<fileset dir="licenses"/>
		</copy>
		<copy todir="${artifactsDir}">
			<fileset dir="pkrsc" includes="license.txt"/>
			<fileset dir="." includes="*-releasenote.txt"/>
		</copy>
	</target>
	<!--
	<target name="pack.server" depends="_pack.server" description="package oden">
		<zip destfile="${artifactsDir}/${pkname}"
			basedir="${artifactsDir}" excludes="*.zip,*.tar,*.tar.gz,**/*.svn"/>
	</target>
	
	<target name="pack.src.server">
		<property name="pkname" value="Anyframe-Oden-${version}-src.zip"/>
		<property name="todo" value="all-local-src"/>
		<antcall target="_pack.server"/>
		<zip destfile="${artifactsDir}/${pkname}"
			basedir="${artifactsDir}" excludes="*.zip,*.tar,*.tar.gz,**/*.svn,*.pdf"/>
	</target>
	
	<target name="pack.server.gzip" depends="_pack.server">
		<tar destfile="${artifactsDir}/Anyframe-Oden-${version}.tar" basedir="${artifactsDir}" excludes="*.zip,*.tar.gz,**/*.svn"/>
		<gzip destfile="${artifactsDir}/Anyframe-Oden-${version}.tar.gz" src="${artifactsDir}/Anyframe-Oden-${version}.tar"/>
		<delete file="${artifactsDir}/Anyframe-Oden-${version}.tar"/>
	</target>
	-->
	<!--
	<target name="_pack.ent.server" depends="build.all">
		<delete dir="${artifactsDir}" excludes="*.zip,*tar.gz"/>
		<mkdir dir="${artifactsDir}/bin"/>
		<mkdir dir="${artifactsDir}/bundle"/>
		<mkdir dir="${artifactsDir}/conf"/>
		
		<copy todir="${artifactsDir}/bin">
			<fileset dir="dist" includes="oden-*.jar"/>
		</copy>
		<copy todir="${artifactsDir}/bundle">
			<fileset dir="${basedir}/bundle" 
				includes="anyframe.common.bundle.gate-*.jar,
					anyframe.oden.bundle.common-*.jar,
					anyframe.oden.bundle.core-*.jar,
					anyframe.oden.bundle.hessiancli-*.jar,
					anyframe.oden.bundle.ent.misc-*.jar,
					anyframe.oden.bundle.ent.repository-*.jar,
					anyframe.oden.bundle.ent.snapshot-*.jar,
					anyframe.oden.bundle.ent.http-*.jar,
					anyframe.oden.bundle.ent.auth-*.jar,
					anyframe.oden.bundle.sh-*.jar,
					felix.jar,
					org.apache.felix.configadmin-*.jar,
					org.apache.felix.eventadmin-*.jar,
					org.apache.felix.http.jetty-*.jar,
					org.apache.felix.log-*.jar,
					org.apache.felix.prefs-*.jar,
					org.apache.felix.scr-*.jar,
					org.apache.felix.shell.remote-*.jar,
					org.json_*.jar,
					hessian-*.jar"/>
		</copy>
		<copy todir="${artifactsDir}/conf">
			<fileset dir="pkrsc" includes="config.xml,oden.ini,accounts.txt"/>
		</copy>
		<copy todir="${artifactsDir}/bin">
			<fileset dir="pkrsc" includes="startup.cmd,acc.cmd,runc.cmd,startup.sh,acc.sh,runc.sh"/>
		</copy>
		<copy todir="${artifactsDir}/docs">
			<fileset dir="pkrsc" includes="*.pdf"/>
		</copy>
	</target>
	-->
	<!--
	<target name="pack.ent.server" depends="_pack.ent.server" description="package oden">
		<zip destfile="${artifactsDir}/Anyframe-Oden-Enterprise-${version}.zip"
			basedir="${artifactsDir}" excludes="*.zip,*.tar,*.tar.gz,**/*.svn"/>
	</target>
	
	<target name="pack.ent.server.gzip" depends="_pack.ent.server">
		<tar destfile="${artifactsDir}/Anyframe-Oden-Enterprise-${version}.tar" basedir="${artifactsDir}" excludes="*.zip,*.tar.gz,**/*.svn"/>
		<gzip destfile="${artifactsDir}/Anyframe-Oden-Enterprise-${version}.tar.gz" src="${artifactsDir}/Anyframe-Oden-Enterprise-${version}.tar"/>
		<delete file="${artifactsDir}/Anyframe-Oden-Enterprise-${version}.tar"/>
	</target>
	-->

	<target name="pack.all">	
		<condition property="pkname" else="Anyframe-Oden-${version}-bin.zip">
			<isset property="pkname"/>
		</condition>
		<condition property="server.target" else="_pack.server">
			<isset property="server.target"/>
		</condition>
		<condition property="artifactsDir" else="pack">
			<isset property="artifactsDir"/>
		</condition>
		
		<delete dir="${artifactsDir}"/>
		
		<antcall target="build.all"/>
				
		<antcall target="${server.target}"/>
		
		<zip destfile="${artifactsDir}/${pkname}">
			<zipfileset dir="${artifactsDir}" includes="bin/*.sh" filemode="754"/>
			<zipfileset dir="${artifactsDir}" excludes="bin/*.sh,*.zip"/>
		</zip>
	</target>
		
	<target name="pack.src.all">
		<property name="pkname" value="Anyframe-Oden-${version}-src.zip"/>
		<property name="todo" value="all-local-src"/>
		<condition property="artifactsDir" else="pack">
			<isset property="artifactsDir"/>
		</condition>
		<antcall target="pack.all"/>
	</target>

	<target name="pack.core.admin">
		<!-- set properties -->
		<condition property="pkname" else="Anyframe-Oden-${version}-bin.zip">
			<isset property="pkname"/>
		</condition>

		<property name="distDir" location="pack_core_admin"/>
		<delete dir="${distDir}"/>
		
		<!-- pack core -->
		<property name="artifactsDir" location="${distDir}/${pksubname}/core"/>
		<antcall target="build.all"/>
		<antcall target="_pack.server"/>
		
		<!-- pack admin -->
		<ant antfile="../anyframe-oden-admin/build.xml" target="all" inheritall="false" />
		<mkdir dir="${distDir}/${pksubname}/admin"/>
		<copy todir="${distDir}/${pksubname}/admin" >
			<fileset dir="../anyframe-oden-admin/pack"/>
		</copy>
		
		<!-- pack manual -->
		<mkdir dir="${distDir}/${pksubname}/manual"/>
		<copy todir="${distDir}/${pksubname}/manual" failonerror="false">
			<fileset dir="${manual.dir}/reference" includes="htmlsingle/**,image/**,pdf/**" excludes="image/WorkingWithEclipsePlugin/**"/>
		</copy>
		
		<!-- zip -->
		<zip destfile="${distDir}/${pkname}">
			<zipfileset dir="${distDir}" includes="**/*.sh" filemode="754"/>
			<zipfileset dir="${distDir}" excludes="**/*.sh,*.zip"/>
		</zip>
	</target>
	
	<target name="pack.src.core.admin">
		<property name="pkname" value="Anyframe-Oden-${version}-src.zip"/>
		<property name="todo" value="all-local-src"/>
		<antcall target="pack.core.admin"/>
	</target>
	
<!--	
	<target name="jdepend">
	  <jdepend format="xml" outputfile="docs/jdepend-report.xml">
	  	  <exclude name="org.*"/>
	  	  <exclude name="java.*"/>
	  	  <exclude name="javax.*"/>
	      <classespath>
	        <pathelement location="bundle" />
	      	<pathelement location="build"/>
	      </classespath>
	  	<classpath location="build" />
	  </jdepend>

	  <style basedir="docs" destdir="docs"
	         includes="jdepend-report.xml" 
	         style="${ant.home}/etc/jdepend.xsl" />
	</target>
	
	<target name="jdepend2">
		<jdepend classpathref="base.path" outputfile="depend.xml" format="xml">
			<exclude name="org.*"/>
			<exclude name="anyframe.*"/>
			<exclude name="ch.*"/>
			<exclude name="com.*"/>
		  	  <exclude name="javax.*"/>
			<exclude name="sun.*"/>
		    <classespath>
		        <pathelement location="E:\dev\bin\jdk1.5.0.16\jre\lib\rt.jar"/>
		    </classespath>
		</jdepend>
		
		<style basedir="." destdir="."
		         includes="depend.xml" 
		         style="${ant.home}/etc/jdepend.xsl" />
	</target>

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	
	<target name="findbugs" >
			<findbugs home="E:/dev/3rd/findbugs-1.3.9"
		              output="html"
					  stylesheet="fancy.xsl"
		              outputFile="findbugs.html" >
				<auxClasspath><fileset dir="bundle" excludes="anyframe*.jar"/></auxClasspath>
		      <class location="bundle/anyframe.common.bundle.gate-1.0.0.jar" />
		      	<class location="bundle/anyframe.common.bundle.log-1.0.0.jar" />
				<class location="bundle/anyframe.oden.bundle.common-1.0.0.jar" />
				<class location="bundle/anyframe.oden.bundle.core-1.0.0.jar" />
				<class location="bundle/anyframe.oden.bundle.deploy-1.0.0.jar" />
				<class location="bundle/anyframe.oden.bundle.prefs-1.0.0.jar" />
				<class location="bundle/anyframe.oden.bundle.repository-1.0.0.jar" />
		    </findbugs>
		  </target>
-->
</project>
