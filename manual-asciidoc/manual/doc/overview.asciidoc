[[overview]]

== Overview
---
::

Anyframe Open Deployment ENvironment (이하 ODEN)Anyframe Open Deployment ENvironment (이하 ODEN) footnote:[ODEN은 OSGi, Eclipse 등 Java 기술을 활용하고 있으며, 손쉽게 확장이 가능한 개방형 아키텍처를 지향한다. 더불어 각종 UNIX, Mac OS X, Microsoft Windows 등 다양한 플랫폼 환경을 지원한다.]은 CI은 CI footnote:[Continuous Integration: 빌드, 테스트, 배포 등의 일련의 절차를 통합/자동화함으로써 소프트웨어 딜리버리의 시간을 단축시키는 기법 및 이를 가능하게 하는 것]환경을 통해 빌드된 어플리케이션 컴포넌트 및 각종 설정파일, 웹파일 등을 원하는 배포대상서버에 편리하게 배포할 수 있도록 하는 배포관리 툴이다. 본 장에서는 ODEN의 개발 배경 및 주요 특징에 대한 간략한 소개를 제공한다.



[[overview_introduction]]


=== Introduction

:: 최근의 일반적인 중대형 개발 프로젝트의 프로세스는 요구정의로부터 시작하여 분석 및 아키텍처정의, 설계, 개발, 이행 등으로 진행하는 것이 최근의 추세이며, 여러 벤더들은 이러한 각 공정 단계에 특화된 다양한 툴을 제공하고 있다. 그러나 분석/아키텍처정의/설계 단계에서 활용할 수 있는 다양한 툴과는 달리, 개발단계 이후 활용할 수 있는 툴의 범위는 다소 부족한 듯 하다. 특히, 개발한 어플리케이션 컴포넌트들을 개발서버 및 테스트서버 혹은 그 너머의 운영서버 등에 배포할 수 있는 전문화된 배포관리 툴에 대한 선택의 폭은 매우 작은 것이 현실이다.


image::../image/Overview/overview_somethingmissing.png[]
  
이러한 전문적인 배포관리툴의 부재로 인해, 현장 프로젝트에서는 몇가지 어려움에 직면하게 된다.

첫째, 자동화 및 정형화된 배포관리가 이루어지지 않아 프로젝트 진행 및 운영 시 추가적인 리소스가 필요하게 된다.

* 기존에는 수작업 또는 CI엔진에 의한 복사 등으로 배포를 실시하였는데, 이를 관리하기 위해 QAO기존에는 수작업 또는 CI엔진에 의한 복사 등으로 배포를 실시하였는데, 이를 관리하기 위해 QAO footnote:[Quality Assurance Officer: 품질관리자]혹은 SA혹은 SA footnote:[Software Architect: 소프트웨어 아키텍트]에 의한 배포관리가 전문적으로 이루어져야 했음



* Target Server가 여러대일 경우, 해당 작업을 단순반복하여 처리해야 하므로 번거로운 작업을 수행해야 함





둘째, 배포 시 고려할 수 있는 다양한 배포 방법에 일일이 대응하기가 어렵게 된다.

* 전문적인 배포관리 툴이 없다면 전체 배포, 원하는 것만 배포, 변경된 사항만 배포 등 현장에서 요구하는 다양한 배포 방식에 일일이 대응하기 어려움

* 특히, 개발서버에서는 대개 변경된 사항만 배포되면 족함에도 불구하고, 일일이 비교하는 것이 번거롭기 때문에 전체를 한꺼번에 배포할 경우가 많음

* 실제로 일일이 비교하여 배포하는 경우라도, 누락되는 것이 있어 결국 배포에 실패하게 되는 경우가 발생함





셋째, 표준화 및 정형화된 프로세스에 기반한 개발 및 이행단계 진행이 어렵게 된다.

* 프로세스화된 배포 환경의 부재는 매번 배포 시마다 업무의 혼란 및 리소스의 낭비 여지를 제공하게 됨

* 이를 위해 배포 정책 설정, 스냅샷/롤백, 로그분석, 스케쥴링/배치, 워크플로우 적용 등 다양한 기능들이 필요함





ODEN은 이러한 어려움을 극복하기 위한 자동화된 배포관리 환경을 제공한다.

[[overview_keyfeatures]]


=== Key Features

:: ODEN은 다음과 같은 주요 특징을 지닌다.

첫째, 현장 프로젝트의 다양한 상황에 대응하기 위한 개방적이고 유연한 구조를 지향한다.

* 현장의 추가기능 요구에 유연하게 대응할 수 있도록 플러그인 형태(OSGi Bundle)로 기능을 추가할 수 있는 플랫폼을 활용하였음

* Http프로토콜을 통해 명령어 형태로 ODEN과 연계할 수 있어, 기존 이관 시스템과의 연계가 편리



둘째, 다양한 형태의 배포 방법을 지원한다.

* 일괄 배포

* 변경된 것만 배포



셋째, 배포관련 다양한 부가기능 및 가이드를 제공한다.

* 이력 조회 기능

* 서버간 정합성 검증 기능



넷째, 다양한 배포환경에 적용할 수 있도록 안정적인 성능을 보장한다.

* 대량, 대용량 배포물에 대한 안정적인 배포실행 제공

* 물리적 디스크 I/O를 최대한 줄여 속도 확보



다섯째, 다양한 인터페이스를 제공한다.

* CLI 환경을 통한 배포 실행 및 모니터링

* Web UI를 통한 배포 실행 및 모니터링



여섯째, CI서버와 연동을 통해 빌드수행이 가능하다.

* Jenkins와 연동 가능



[[overview_support]]


=== Support

:: [[overview_support_tech]]


==== 기술 지원

:: ODEN에 대한 기술 지원은 Anyframe 오픈소스 커뮤니티 사이트의 포럼 (link:http://www.anyframejava.org/forum[http://www.anyframejava.org/forum])을 통해 이루어지며, 단순 질의 응답에서부터 소스 코드에 대한 구체적인 가이드 및 해결책을 제시한다. 특정 프로젝트를 위한 기술 컨설팅 지원이 필요한 경우 Anyframe 오픈소스 커뮤니티 사이트의 연락처(link:http://www.anyframejava.org/about/contactus[http://www.anyframejava.org/about/contactus])를 통해 요청할 수 있다. 또한, 이슈관리시스템인 JIRA(link:http://dev.anyframejava.org/jira[http://dev.anyframejava.org/jira])를 통해, Bug Fix, Improvements, New Features 에 대한 이슈들을 요청할 수 있다. 자세한 사용방법은 이곳(link:http://www.anyframejava.org/development/issue[http://www.anyframejava.org/development/issue ])을 참조하도록 한다.



[[overview_support_maintenance]]


==== 유지 보수

:: Anyframe 오픈소스 커뮤니티 사이트(link:http://www.anyframejava.org[http://www.anyframejava.org])를 통해 릴리즈된 최신버전 및 이전 버전에 해당하는 라이브러리, 매뉴얼 등을 제공받을 수 있으며 패치 및 업그레이드되는 파일의 경우에도 오픈소스 커뮤니티 사이트를 통해 제공된다. 오픈소스 커뮤니티 사이트의 첫페이지를 통해서 공지되므로 필요 시 참조하도록 한다.



