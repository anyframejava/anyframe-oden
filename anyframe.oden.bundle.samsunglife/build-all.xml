<project name="_Oden Full SamsungLife" default="build.all" basedir=".">
	<property name="version" value="1.0.0"/>
	<property name="oden.fwk" location="../anyframe.oden.bundle"/>
	<target name="build.all">
		<ant antfile="../anyframe.oden.bundle/build.xml" inheritall="false" />
			
		<ant antfile="../anyframe.common.bundle.gate/build.xml" inheritall="false" />

		<ant antfile="../anyframe.common.bundle.log/build.xml" inheritall="false" />

		<ant antfile="../anyframe.oden.bundle.common/build.xml" inheritall="false" />
		
		<ant antfile="../anyframe.oden.bundle.prefs/build.xml" inheritall="false" />
				
		<ant antfile="../anyframe.oden.bundle.deploy/build.xml" inheritall="false" />

		<ant antfile="../anyframe.oden.bundle.repository/build.xml" inheritall="false" />

		<ant antfile="../anyframe.oden.bundle.core/build.xml" inheritall="false" />
		
		<ant antfile="../anyframe.oden.bundle.samsunglife/build.xml" inheritall="false" />
	</target>
	
	<target name="pack.agent" depends="build.all" description="package oden agent">
		<delete dir="${basedir}/pack" excludes="*.tar.gz"/>
		<mkdir dir="${basedir}/pack/bin"/>
		<mkdir dir="${basedir}/pack/bundle"/>
		
		<copy todir="${basedir}/pack/bin">
			<fileset dir="${oden.fwk}/dist" includes="oden-*.jar"/>
		</copy>
		<copy todir="${basedir}/pack/bundle">
			<fileset dir="${oden.fwk}/bundle" 
				includes=
					"anyframe.oden.bundle.deploy-*.jar,
					anyframe.oden.bundle.common-*.jar,
					org.apache.felix.eventadmin-*.jar,
					org.apache.felix.log-*.jar,
					org.apache.felix.scr-*.jar,
					remote-*.jar,
					felix*.jar,
					org.json_*.jar"/>
		</copy>
		<copy todir="${basedir}/pack">
			<fileset dir="rscs" includes="startup.sh,shutdown.sh"/>
		</copy>
		
		<tar destfile="${basedir}/pack/oden-agent-${version}.tar" basedir="${basedir}/pack" excludes="*.tar.gz,**/*.svn"/>
		<gzip destfile="${basedir}/pack/oden-agent-${version}.tar.gz" src="${basedir}/pack/oden-agent-${version}.tar"/>
	</target>
			
	<target name="pack.server" depends="build.all" description="package oden">
		<delete dir="${basedir}/pack" excludes="*.tar.gz"/>	
		<mkdir dir="${basedir}/pack/bin"/>
		<mkdir dir="${basedir}/pack/bundle"/>
		<mkdir dir="${basedir}/pack/conf"/>
		
		<copy todir="${basedir}/pack/bin">
			<fileset dir="${oden.fwk}/dist" includes="oden-*.jar"/>
		</copy>
		<copy todir="${basedir}/pack/bundle">
			<fileset dir="${oden.fwk}/bundle" 
				includes="anyframe.common.bundle.gate-*.jar,
					anyframe.common.bundle.log-*.jar,
					anyframe.oden.bundle.common-*.jar,
					anyframe.oden.bundle.core-*.jar,
					anyframe.oden.bundle.deploy-*jar,
					anyframe.oden.bundle.prefs-*.jar,
					anyframe.oden.bundle.repository-*.jar,
					anyframe.oden.bundle.samsunglife-*.jar,
					felix.jar,
					org.apache.felix.eventadmin-*.jar,
					org.apache.felix.http.jetty-*.jar,
					org.apache.felix.log-*.jar,
					org.apache.felix.prefs-*.jar,
					org.apache.felix.scr-*.jar,
					org.apache.felix.shell.remote-*.jar,
					org.apache.felix.shell.tui-*.jar,
					org.json_*.jar,
					remote-*.jar,
					hessian-*.jar,
					jdom.jar,
					xerces-*.jar" />
		</copy>
		<copy todir="${basedir}/pack/conf">
			<fileset dir="rscs" includes="config.xml,oden.ini"/>
		</copy>
		<copy todir="${basedir}/pack">
			<fileset dir="rscs" includes="startup.sh,shutdown.sh"/>
		</copy>
		
		<tar destfile="${basedir}/pack/oden-${version}.tar" basedir="${basedir}/pack" excludes="*.tar.gz,**/*.svn"/>
		<gzip destfile="${basedir}/pack/oden-${version}.tar.gz" src="${basedir}/pack/oden-${version}.tar"/>
	</target>
</project>